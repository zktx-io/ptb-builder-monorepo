@tailwind base;
@tailwind components;
@tailwind utilities;

/* ============================================================
   PTB THEME: CSS VARIABLES
   - Borders are opaque (no alpha).
   - Backgrounds keep alpha to show layering.
   - Brightness order: normal < hover < active.
   ============================================================ */

/* Light (default theme) */
:root {
  /* Flow (command â†’ command) */
  --ptb-flow-stroke: #9ca3af; /* gray-400 */
  --ptb-flow-width: 2.75;
  --ptb-flow-dash: 5 5;

  /* IO edge colors by category (normal) */
  --ptb-io-address-stroke: #f59e0b; /* amber-500 */
  --ptb-io-address-width: 2.5;
  --ptb-io-number-stroke:  #ef4444; /* red-500 */
  --ptb-io-number-width: 2.5;
  --ptb-io-bool-stroke:    #8b5cf6; /* violet-500 */
  --ptb-io-bool-width: 2.5;
  --ptb-io-string-stroke:  #10b981; /* emerald-500 */
  --ptb-io-string-width: 2.5;
  --ptb-io-object-stroke:  #3b82f6; /* blue-500 */
  --ptb-io-object-width: 2.5;
  --ptb-io-id-stroke:      #06b6d4; /* cyan-500 */
  --ptb-io-id-width: 2.5;
  --ptb-io-unknown-stroke: #737373; /* gray-500 */
  --ptb-io-unknown-width: 2;
  --ptb-io-unknown-dash: 4 4;

  /* IO edge colors (selected/active = brighter) */
  --ptb-io-address-stroke-active: #fbbf24; /* amber-400 */
  --ptb-io-number-stroke-active:  #f87171; /* red-400 */
  --ptb-io-bool-stroke-active:    #a78bfa; /* violet-400 */
  --ptb-io-string-stroke-active:  #34d399; /* emerald-400 */
  --ptb-io-object-stroke-active:  #60a5fa; /* blue-400 */
  --ptb-io-id-stroke-active:      #22d3ee; /* cyan-400 */
  --ptb-io-unknown-stroke-active: #a3a3a3; /* gray-400 */

  /* =======================
     Node surfaces (border/bg)
     ======================= */

  /* Command (gray) */
  --ptb-node-command-border:        #9ca3af; /* gray-400 */
  --ptb-node-command-bg:            rgba(209,213,219,0.60); /* gray-300 */
  --ptb-node-command-border-hover:  #6b7280; /* gray-500 */
  --ptb-node-command-bg-hover:      rgba(209,213,219,0.75);
  --ptb-node-command-border-active: #6b7280; /* gray-500 */
  --ptb-node-command-bg-active:     rgba(209,213,219,0.90);

  /* Address (amber) */
  --ptb-node-address-border:        #b45309; /* amber-700 */
  --ptb-node-address-bg:            rgba(253,230,138,0.60); /* amber-200 */
  --ptb-node-address-border-hover:  #f59e0b; /* amber-500 */
  --ptb-node-address-bg-hover:      rgba(253,230,138,0.75);
  --ptb-node-address-border-active: #fbbf24; /* amber-400 */
  --ptb-node-address-bg-active:     rgba(253,230,138,0.90);

  /* Number (red) */
  --ptb-node-number-border:         #b91c1c; /* red-700 */
  --ptb-node-number-bg:             rgba(252,165,165,0.60); /* red-300 */
  --ptb-node-number-border-hover:   #ef4444; /* red-500 */
  --ptb-node-number-bg-hover:       rgba(252,165,165,0.75);
  --ptb-node-number-border-active:  #f87171; /* red-400 */
  --ptb-node-number-bg-active:      rgba(252,165,165,0.90);

  /* Bool (violet) */
  --ptb-node-bool-border:           #6d28d9; /* violet-700 */
  --ptb-node-bool-bg:               rgba(196,181,253,0.60); /* violet-300 */
  --ptb-node-bool-border-hover:     #8b5cf6; /* violet-500 */
  --ptb-node-bool-bg-hover:         rgba(196,181,253,0.75);
  --ptb-node-bool-border-active:    #a78bfa; /* violet-400 */
  --ptb-node-bool-bg-active:        rgba(196,181,253,0.90);

  /* String (emerald) */
  --ptb-node-string-border:         #047857; /* emerald-700 */
  --ptb-node-string-bg:             rgba(134,239,172,0.60); /* emerald-300 */
  --ptb-node-string-border-hover:   #10b981; /* emerald-500 */
  --ptb-node-string-bg-hover:       rgba(134,239,172,0.75);
  --ptb-node-string-border-active:  #34d399; /* emerald-400 */
  --ptb-node-string-bg-active:      rgba(134,239,172,0.90);

  /* Object (blue) */
  --ptb-node-object-border:         #1d4ed8; /* blue-700 */
  --ptb-node-object-bg:             rgba(147,197,253,0.60); /* blue-300 */
  --ptb-node-object-border-hover:   #3b82f6; /* blue-500 */
  --ptb-node-object-bg-hover:       rgba(147,197,253,0.75);
  --ptb-node-object-border-active:  #60a5fa; /* blue-400 */
  --ptb-node-object-bg-active:      rgba(147,197,253,0.90);

  /* ID (cyan) */
  --ptb-node-id-border:        #0e7490; /* cyan-700 */
  --ptb-node-id-bg:            rgba(103,232,249,0.60); /* cyan-300 */
  --ptb-node-id-border-hover:  #06b6d4; /* cyan-500 */
  --ptb-node-id-bg-hover:      rgba(103,232,249,0.75);
  --ptb-node-id-border-active: #22d3ee; /* cyan-400 */
  --ptb-node-id-bg-active:     rgba(103,232,249,0.90);

  /* Unknown (gray neutral) */
  --ptb-node-unknown-border:        #525252; /* gray-600 */
  --ptb-node-unknown-bg:            rgba(163,163,163,0.60); /* gray-400 */
  --ptb-node-unknown-border-hover:  #737373; /* gray-500 */
  --ptb-node-unknown-bg-hover:      rgba(163,163,163,0.75);
  --ptb-node-unknown-border-active: #a3a3a3; /* gray-400 */
  --ptb-node-unknown-bg-active:     rgba(163,163,163,0.90);

  /* === Option (violet-ish, distinct from Bool) === */
  --ptb-node-option-border:         #7c3aed; /* violet-600 */
  --ptb-node-option-bg:             rgba(199, 178, 255, 0.55); /* custom soft violet */
  --ptb-node-option-border-hover:   #8b5cf6; /* violet-500 */
  --ptb-node-option-bg-hover:       rgba(199, 178, 255, 0.72);
  --ptb-node-option-border-active:  #a78bfa; /* violet-400 */
  --ptb-node-option-bg-active:      rgba(199, 178, 255, 0.90);

  /* ===== CodePip palette (Light) ===== */
  --ptb-codepip-header-bg: rgba(255,255,255,0.92);
  --ptb-codepip-header-fg: #111;
  --ptb-codepip-body-bg: rgba(250,250,250,0.98);
  --ptb-codepip-border: rgba(0,0,0,0.08);

  /* resizer (light) */
  --ptb-code-resizer-bg: rgba(0,0,0,0.08);
  --ptb-code-resizer-hover-bg: rgba(0,0,0,0.18);
  --ptb-code-resizer-grip: rgba(0,0,0,0.35);

  --ptb-code-btn-neutral-bg: #e5e7eb; /* gray-200 */
  --ptb-code-btn-neutral-fg: #111827;

  /* Run button = RED */
  --ptb-code-btn-run: #ef4444;           /* red-500 */
  --ptb-code-btn-run-hover: #f87171;     /* red-400 */
  --ptb-code-btn-run-active: #dc2626;    /* red-600 */
  --ptb-code-btn-run-disabled: #c7cbd1;  /* muted */

  /* neutral buttons hover/active */
  --ptb-code-btn-neutral-hover: #f3f4f6; /* gray-100 */
  --ptb-code-btn-neutral-active: #d1d5db; /* gray-300 */

  /* Modal Overlay */
  --ptb-modal-overlay: rgba(0,0,0,0.45);

  /* Modal Panel */
  --ptb-modal-panel-bg: #f8fafc;
  --ptb-modal-panel-fg: #0b0f14;
  --ptb-modal-panel-border: rgba(0,0,0,0.12);

  /* Modal Header */
  --ptb-modal-header-bg: rgba(255,255,255,0.98);

  /* Modal List */
  --ptb-assets-list-h: 58vh;
  --ptb-assets-row-hover: rgba(0,0,0,0.06);
  --ptb-assets-divider: rgba(0,0,0,0.12);

  /* Modal Buttons (neutral) */
  --ptb-modal-btn-neutral-bg: #e5e7eb;      /* gray-200 */
  --ptb-modal-btn-neutral-fg: #111827;      /* gray-900 */
  --ptb-modal-btn-neutral-hover: #f3f4f6;   /* gray-100 */
  --ptb-modal-btn-neutral-active: #d1d5db;  /* gray-300 */
}

/* Dark theme (opaque borders, alpha BGs) */
.dark {
  --ptb-flow-stroke: #374151; /* gray-700 */
  --ptb-io-unknown-stroke: #a3a3a3;

  /* IO edge colors (normal, tuned for dark) */
  --ptb-io-address-stroke: #d97706; /* amber-600 */
  --ptb-io-number-stroke:  #dc2626; /* red-600 */
  --ptb-io-bool-stroke:    #7c3aed; /* violet-600 */
  --ptb-io-string-stroke:  #059669; /* emerald-600 */
  --ptb-io-object-stroke:  #2563eb; /* blue-600 */
  --ptb-io-id-stroke:      #0891b2; /* cyan-600 */
  --ptb-io-unknown-stroke: #737373; /* gray-500 */

  /* IO selected/active */
  --ptb-io-address-stroke-active: #f59e0b; /* amber-500 */
  --ptb-io-number-stroke-active:  #ef4444; /* red-500 */
  --ptb-io-bool-stroke-active:    #8b5cf6; /* violet-500 */
  --ptb-io-string-stroke-active:  #10b981; /* emerald-500 */
  --ptb-io-object-stroke-active:  #3b82f6; /* blue-500 */
  --ptb-io-id-stroke-active:      #22d3ee; /* cyan-400 */
  --ptb-io-unknown-stroke-active: #d4d4d4; /* gray-300 */

  /* Command */
  --ptb-node-command-border:        #374151; /* gray-700 */
  --ptb-node-command-bg:            rgba(31,41,55,0.60);
  --ptb-node-command-border-hover:  #9ca3af; /* gray-400 */
  --ptb-node-command-bg-hover:      rgba(31,41,55,0.75);
  --ptb-node-command-border-active: #9ca3af; /* gray-400 */
  --ptb-node-command-bg-active:     rgba(31,41,55,0.95);

  /* Address */
  --ptb-node-address-border:        #92400e; /* amber-800 */
  --ptb-node-address-bg:            rgba(245,158,11,0.22);
  --ptb-node-address-border-hover:  #f59e0b; /* amber-500 */
  --ptb-node-address-bg-hover:      rgba(245,158,11,0.35);
  --ptb-node-address-border-active: #fbbf24; /* amber-400 */
  --ptb-node-address-bg-active:     rgba(245,158,11,0.48);

  /* Number */
  --ptb-node-number-border:         #7f1d1d; /* red-900 */
  --ptb-node-number-bg:             rgba(248,113,113,0.22);
  --ptb-node-number-border-hover:   #ef4444; /* red-500 */
  --ptb-node-number-bg-hover:       rgba(248,113,113,0.35);
  --ptb-node-number-border-active:  #f87171; /* red-400 */
  --ptb-node-number-bg-active:      rgba(248,113,113,0.48);

  /* Bool */
  --ptb-node-bool-border:           #5b21b6; /* violet-800 */
  --ptb-node-bool-bg:               rgba(167,139,250,0.22);
  --ptb-node-bool-border-hover:     #8b5cf6; /* violet-500 */
  --ptb-node-bool-bg-hover:         rgba(167,139,250,0.35);
  --ptb-node-bool-border-active:    #a78bfa; /* violet-400 */
  --ptb-node-bool-bg-active:        rgba(167,139,250,0.48);

  /* String */
  --ptb-node-string-border:         #065f46; /* emerald-800 */
  --ptb-node-string-bg:             rgba(16,185,129,0.22);
  --ptb-node-string-border-hover:   #10b981; /* emerald-500 */
  --ptb-node-string-bg-hover:       rgba(16,185,129,0.35);
  --ptb-node-string-border-active:  #34d399; /* emerald-400 */
  --ptb-node-string-bg-active:      rgba(16,185,129,0.48);

  /* Object */
  --ptb-node-object-border:         #1e3a8a; /* blue-900 */
  --ptb-node-object-bg:             rgba(59,130,246,0.22);
  --ptb-node-object-border-hover:   #3b82f6; /* blue-500 */
  --ptb-node-object-bg-hover:       rgba(59,130,246,0.35);
  --ptb-node-object-border-active:  #60a5fa; /* blue-400 */
  --ptb-node-object-bg-active:      rgba(59,130,246,0.48);

  /* ID */
  --ptb-node-id-border:        #164e63; /* cyan-900 */
  --ptb-node-id-bg:            rgba(103,232,249,0.22); /* cyan-300 */
  --ptb-node-id-border-hover:  #0891b2; /* cyan-600 */
  --ptb-node-id-bg-hover:      rgba(103,232,249,0.35);
  --ptb-node-id-border-active: #22d3ee; /* cyan-400 */
  --ptb-node-id-bg-active:     rgba(103,232,249,0.48);

  /* Unknown */
  --ptb-node-unknown-border:        #404040; /* gray-700 */
  --ptb-node-unknown-bg:            rgba(163,163,163,0.22);
  --ptb-node-unknown-border-hover:  #737373; /* gray-500 */
  --ptb-node-unknown-bg-hover:      rgba(163,163,163,0.35);
  --ptb-node-unknown-border-active: #d4d4d4; /* gray-300 */
  --ptb-node-unknown-bg-active:     rgba(163,163,163,0.48);

  /* Option */
  --ptb-node-option-border:         #6d28d9; /* violet-700 */
  --ptb-node-option-bg:             rgba(139,92,246,0.22);  /* violet-500 faint */
  --ptb-node-option-border-hover:   #8b5cf6; /* violet-500 */
  --ptb-node-option-bg-hover:       rgba(139,92,246,0.35);
  --ptb-node-option-border-active:  #a78bfa; /* violet-400 */
  --ptb-node-option-bg-active:      rgba(139,92,246,0.48);

  /* ===== CodePip palette (Dark) ===== */
  --ptb-codepip-header-bg: rgba(17,17,17,0.9);
  --ptb-codepip-header-fg: #fff;
  --ptb-codepip-body-bg: rgba(13,17,23,0.9);
  --ptb-codepip-border: rgba(255,255,255,0.08);

  /* resizer (dark) */
  --ptb-code-resizer-bg: rgba(255,255,255,0.10);
  --ptb-code-resizer-hover-bg: rgba(255,255,255,0.20);
  --ptb-code-resizer-grip: rgba(255,255,255,0.55);

  --ptb-code-btn-neutral-bg: #374151; /* gray-700 */
  --ptb-code-btn-neutral-fg: #ffffff;
  
  /* Run button */
  --ptb-code-btn-run: #ef4444;           /* red-500 */
  --ptb-code-btn-run-hover: #f87171;     /* red-400 */
  --ptb-code-btn-run-active: #dc2626;    /* red-600 */
  --ptb-code-btn-run-disabled: #6b7280;  /* gray-500-ish */

  --ptb-code-btn-neutral-hover: #4b5563;  /* gray-600 */
  --ptb-code-btn-neutral-active: #6b7280; /* gray-500 */

  /* Modal */
  --ptb-modal-overlay: rgba(0,0,0,0.45);

  --ptb-modal-panel-bg: #0f1115;
  --ptb-modal-panel-fg: #ffffff;
  --ptb-modal-panel-border: rgba(255,255,255,0.12);

  --ptb-modal-header-bg: rgba(17,17,17,0.95);

  --ptb-assets-row-hover: rgba(255,255,255,0.06);
  --ptb-assets-divider: rgba(255,255,255,0.12);

  --ptb-modal-btn-neutral-bg: #1f2937;       /* gray-800 */
  --ptb-modal-btn-neutral-fg: #e5e7eb;
  --ptb-modal-btn-neutral-hover: #374151;    /* gray-700 */
  --ptb-modal-btn-neutral-active: #4b5563;   /* gray-600 */
}

/* ============================================================
   EDGE STYLES
   ============================================================ */

@keyframes ptb-flow-dash { to { stroke-dashoffset: -50; } }

.ptb-flow-edge {
  stroke: var(--ptb-flow-stroke);
  stroke-width: var(--ptb-flow-width);
  stroke-dasharray: var(--ptb-flow-dash);
  fill: none;
  vector-effect: non-scaling-stroke;
  transform: translateZ(0);
  stroke-opacity: 1;
  will-change: stroke-dashoffset;
}
.ptb-flow-active .ptb-flow-edge { animation: ptb-flow-dash 1.8s linear infinite; }
.ptb-flow-edge.is-selected { filter: drop-shadow(0 0 2px rgba(0,0,0,0.25)); }

/* IO edge (solid, no dash/animation). Selected state uses XY vars we set. */
.ptb-io-edge {
  stroke-dasharray: none !important;
  animation: none !important;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-opacity: 1;

  /* Safe defaults */
  --xy-edge-stroke: var(--ptb-io-unknown-stroke);
  --xy-edge-stroke-selected: var(--ptb-io-unknown-stroke-active);
}
/* Category â†’ stroke vars + width */
.ptb-io-edge--address { --xy-edge-stroke: var(--ptb-io-address-stroke);  --xy-edge-stroke-selected: var(--ptb-io-address-stroke-active);  stroke-width: var(--ptb-io-address-width); }
.ptb-io-edge--number  { --xy-edge-stroke: var(--ptb-io-number-stroke);   --xy-edge-stroke-selected: var(--ptb-io-number-stroke-active);   stroke-width: var(--ptb-io-number-width);  }
.ptb-io-edge--bool    { --xy-edge-stroke: var(--ptb-io-bool-stroke);     --xy-edge-stroke-selected: var(--ptb-io-bool-stroke-active);     stroke-width: var(--ptb-io-bool-width);    }
.ptb-io-edge--string  { --xy-edge-stroke: var(--ptb-io-string-stroke);   --xy-edge-stroke-selected: var(--ptb-io-string-stroke-active);   stroke-width: var(--ptb-io-string-width);  }
.ptb-io-edge--object  { --xy-edge-stroke: var(--ptb-io-object-stroke);   --xy-edge-stroke-selected: var(--ptb-io-object-stroke-active);   stroke-width: var(--ptb-io-object-width);  }
.ptb-io-edge--id      { --xy-edge-stroke: var(--ptb-io-id-stroke);       --xy-edge-stroke-selected: var(--ptb-io-id-stroke-active);       stroke-width: var(--ptb-io-id-width);      }
.ptb-io-edge--unknown { --xy-edge-stroke: var(--ptb-io-unknown-stroke);  --xy-edge-stroke-selected: var(--ptb-io-unknown-stroke-active);  stroke-width: var(--ptb-io-unknown-width); stroke-dasharray: var(--ptb-io-unknown-dash); }

/* Ensure base state uses our variable even on older XYFlow builds */
.react-flow__edge .react-flow__edge-path.ptb-io-edge { stroke: var(--xy-edge-stroke); }

/* Hover brighten (falls back to selected if no hover var is provided) */
.react-flow__edge:hover .react-flow__edge-path.ptb-io-edge { stroke: var(--xy-edge-stroke-hover, var(--xy-edge-stroke-selected)); }

/* Keep pointer affordance and hit-test behavior */
.react-flow__edge, .react-flow__edge-path { cursor: pointer; }
.react-flow__edge-path { pointer-events: stroke; }

/* ============================================================
   NODE STYLES
   ============================================================ */

.ptb-node-shell {
  position: relative;
  border-width: 2px;
  z-index: 0;
  transition: border-color 0.15s ease, background-color 0.15s ease;
  will-change: border-color, background-color;
}

/* Remove default shadow; keep ring */
.react-flow__node.dragging .ptb-node-shell,
.react-flow__node.selected .ptb-node-shell { box-shadow: none; }

.react-flow__node.dragging .ptb-node-shell::after,
.react-flow__node.selected  .ptb-node-shell::after {
  content: "";
  position: absolute;
  inset: -2px;
  border: 2px solid var(--ptb-active-ring, transparent);
  border-radius: inherit;
  pointer-events: none;
  z-index: 0;
}

/* Active ring color per type */
.ptb-node--command { --ptb-active-ring: var(--ptb-node-command-border-active); }
.ptb-node--address { --ptb-active-ring: var(--ptb-node-address-border-active); }
.ptb-node--number  { --ptb-active-ring: var(--ptb-node-number-border-active); }
.ptb-node--bool    { --ptb-active-ring: var(--ptb-node-bool-border-active); }
.ptb-node--string  { --ptb-active-ring: var(--ptb-node-string-border-active); }
.ptb-node--object  { --ptb-active-ring: var(--ptb-node-object-border-active); }
.ptb-node--id      { --ptb-active-ring: var(--ptb-node-id-border-active); }
.ptb-node--unknown { --ptb-active-ring: var(--ptb-node-unknown-border-active); }
/* Option */
.ptb-node--option  { --ptb-active-ring: var(--ptb-node-option-border-active); }

/* Base (Normal) surfaces per type */
.ptb-node--command .ptb-node-shell { border-color: var(--ptb-node-command-border); background: var(--ptb-node-command-bg); }
.ptb-node--address .ptb-node-shell { border-color: var(--ptb-node-address-border); background: var(--ptb-node-address-bg); }
.ptb-node--number  .ptb-node-shell { border-color: var(--ptb-node-number-border);  background: var(--ptb-node-number-bg); }
.ptb-node--bool    .ptb-node-shell { border-color: var(--ptb-node-bool-border);    background: var(--ptb-node-bool-bg); }
.ptb-node--string  .ptb-node-shell { border-color: var(--ptb-node-string-border);  background: var(--ptb-node-string-bg); }
.ptb-node--object  .ptb-node-shell { border-color: var(--ptb-node-object-border);  background: var(--ptb-node-object-bg); }
.ptb-node--id      .ptb-node-shell { border-color: var(--ptb-node-id-border);      background: var(--ptb-node-id-bg); }
.ptb-node--unknown .ptb-node-shell { border-color: var(--ptb-node-unknown-border); background: var(--ptb-node-unknown-bg); }
/* Option */
.ptb-node--option  .ptb-node-shell { border-color: var(--ptb-node-option-border);  background: var(--ptb-node-option-bg); }

/* Hover (brighter) */
.react-flow__node:has(.ptb-node--command):hover .ptb-node-shell { border-color: var(--ptb-node-command-border-hover); background: var(--ptb-node-command-bg-hover); }
.react-flow__node:has(.ptb-node--address):hover .ptb-node-shell { border-color: var(--ptb-node-address-border-hover); background: var(--ptb-node-address-bg-hover); }
.react-flow__node:has(.ptb-node--number):hover  .ptb-node-shell { border-color: var(--ptb-node-number-border-hover);  background: var(--ptb-node-number-bg-hover); }
.react-flow__node:has(.ptb-node--bool):hover    .ptb-node-shell { border-color: var(--ptb-node-bool-border-hover);    background: var(--ptb-node-bool-bg-hover); }
.react-flow__node:has(.ptb-node--string):hover  .ptb-node-shell { border-color: var(--ptb-node-string-border-hover);  background: var(--ptb-node-string-bg-hover); }
.react-flow__node:has(.ptb-node--object):hover  .ptb-node-shell { border-color: var(--ptb-node-object-border-hover);  background: var(--ptb-node-object-bg-hover); }
.react-flow__node:has(.ptb-node--id):hover      .ptb-node-shell { border-color: var(--ptb-node-id-border-hover);      background: var(--ptb-node-id-bg-hover); }
.react-flow__node:has(.ptb-node--unknown):hover .ptb-node-shell { border-color: var(--ptb-node-unknown-border-hover); background: var(--ptb-node-unknown-bg-hover); }
/* Option */
.react-flow__node:has(.ptb-node--option):hover  .ptb-node-shell { border-color: var(--ptb-node-option-border-hover);  background: var(--ptb-node-option-bg-hover); }

/* Selected/Active (brightest) */
.react-flow__node.selected:has(.ptb-node--command) .ptb-node-shell { border-color: var(--ptb-node-command-border-active); background: var(--ptb-node-command-bg-active); }
.react-flow__node.selected:has(.ptb-node--address) .ptb-node-shell { border-color: var(--ptb-node-address-border-active); background: var(--ptb-node-address-bg-active); }
.react-flow__node.selected:has(.ptb-node--number)  .ptb-node-shell { border-color: var(--ptb-node-number-border-active);  background: var(--ptb-node-number-bg-active); }
.react-flow__node.selected:has(.ptb-node--bool)    .ptb-node-shell { border-color: var(--ptb-node-bool-border-active);    background: var(--ptb-node-bool-bg-active); }
.react-flow__node.selected:has(.ptb-node--string)  .ptb-node-shell { border-color: var(--ptb-node-string-border-active);  background: var(--ptb-node-string-bg-active); }
.react-flow__node.selected:has(.ptb-node--object)  .ptb-node-shell { border-color: var(--ptb-node-object-border-active);  background: var(--ptb-node-object-bg-active); }
.react-flow__node.selected:has(.ptb-node--id)      .ptb-node-shell { border-color: var(--ptb-node-id-border-active);      background: var(--ptb-node-id-bg-active); }
.react-flow__node.selected:has(.ptb-node--unknown) .ptb-node-shell { border-color: var(--ptb-node-unknown-border-active); background: var(--ptb-node-unknown-bg-active); }
/* Option */
.react-flow__node.selected:has(.ptb-node--option)  .ptb-node-shell { border-color: var(--ptb-node-option-border-active);  background: var(--ptb-node-option-bg-active); }

/* ============================================================
   HANDLE & LABEL STYLES (CLEAN)
   - Parent never rotates; only the glyph rotates for vector (diamond).
   - Labels are always horizontal and overflow outside the 12x12 box.
   ============================================================ */

/* Base handle: no outline, no shadow; color inherits from node state */
.ptb-handle {
  width: 12px;
  height: 12px;
  border: 0;                       /* remove outline */
  background-color: currentColor;  /* fill uses currentColor */
  box-sizing: border-box;
  box-shadow: none;                 /* remove glow/border shadow */
  color: inherit;
  pointer-events: all;
  overflow: visible;                /* allow glyph/label overflow */
  z-index: 10;
  transition: filter .12s ease;
}

/* Keyboard accessibility ring only */
.ptb-handle:focus-visible {
  outline: 2px solid var(--ptb-active-ring);
  outline-offset: 2px;
}

/* Flow handle: size + shape + theme-driven color */
.ptb-handle--flow {
  width: 12px;
  height: 12px;
  border-radius: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--ptb-flow-stroke);
  background: var(--ptb-flow-stroke);
  border-color: var(--ptb-flow-stroke);
}

/* --- Flow handle â†’ follow Command node border color (normal/hover/selected) --- */
.react-flow__node:has(.ptb-node--command) .ptb-handle--flow {
  color: var(--ptb-node-command-border);
  background: var(--ptb-node-command-border);
  border-color: var(--ptb-node-command-border);
}
.react-flow__node:has(.ptb-node--command):hover .ptb-handle--flow {
  color: var(--ptb-node-command-border-hover);
  background: var(--ptb-node-command-border-hover);
  border-color: var(--ptb-node-command-border-hover);
}
.react-flow__node.selected:has(.ptb-node--command) .ptb-handle--flow {
  color: var(--ptb-node-command-border-active);
  background: var(--ptb-node-command-border-active);
  border-color: var(--ptb-node-command-border-active);
}

/* Scalar = circle */
.ptb-handle--scalar { border-radius: 9999px; }

/* Vector parent transparent; diamond is drawn by glyph */
.ptb-handle--vector {
  background-color: transparent;
  border-color: transparent;
  border-radius: 2px;
}

/* Option = square (explicit) */
.ptb-handle--option {
  border-radius: 2px;           /* square-ish corners */
  background-color: currentColor;
  border: 0;
}

/* Glyph layer (rotates for diamond) */
.ptb-handle-glyph {
  position: absolute;
  inset: 0;
  pointer-events: none;
}
.ptb-handle-glyph--vector {
  width: 100%;
  height: 100%;
  background-color: transparent;
  border-radius: 2px;
  transform: rotate(45deg);
  transform-origin: center center;
}

/* Ensure handle color always tracks node color (even if other rules compete) */
.ptb-handle--io { color: inherit !important; }

/* ------- Labels rendered inside <Handle> ------- */
.ptb-handle-label {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  line-height: 1;
  white-space: nowrap;
  pointer-events: none;
  color: #111827;                /* gray-900 (light) */
}
.dark .ptb-handle-label { color: #e5e7eb; } /* gray-200 (dark) */
.ptb-handle-label--left  { left:  calc(100% + 8px); text-align: left; }
.ptb-handle-label--right { right: calc(100% + 8px); text-align: right; }

/* ===== Handle color sync with node border (Normal / Hover / Active) ===== */
.react-flow__node:has(.ptb-node--command) .ptb-handle--io { color: var(--ptb-node-command-border); }
.react-flow__node:has(.ptb-node--address) .ptb-handle--io { color: var(--ptb-node-address-border); }
.react-flow__node:has(.ptb-node--number)  .ptb-handle--io { color: var(--ptb-node-number-border); }
.react-flow__node:has(.ptb-node--bool)    .ptb-handle--io { color: var(--ptb-node-bool-border); }
.react-flow__node:has(.ptb-node--string)  .ptb-handle--io { color: var(--ptb-node-string-border); }
.react-flow__node:has(.ptb-node--object)  .ptb-handle--io { color: var(--ptb-node-object-border); }
.react-flow__node:has(.ptb-node--id)      .ptb-handle--io { color: var(--ptb-node-id-border); }
.react-flow__node:has(.ptb-node--unknown) .ptb-handle--io { color: var(--ptb-node-unknown-border); }
/* Option */
.react-flow__node:has(.ptb-node--option)  .ptb-handle--io { color: var(--ptb-node-option-border); }

/* Hover / Selected mapping (IO handles only) */
.react-flow__node:has(.ptb-node--command):hover .ptb-handle--io { color: var(--ptb-node-command-border-hover); }
.react-flow__node.selected:has(.ptb-node--command) .ptb-handle--io { color: var(--ptb-node-command-border-active); }

.react-flow__node:has(.ptb-node--address):hover .ptb-handle--io { color: var(--ptb-node-address-border-hover); }
.react-flow__node.selected:has(.ptb-node--address) .ptb-handle--io { color: var(--ptb-node-address-border-active); }

.react-flow__node:has(.ptb-node--number):hover  .ptb-handle--io { color: var(--ptb-node-number-border-hover); }
.react-flow__node.selected:has(.ptb-node--number)  .ptb-handle--io { color: var(--ptb-node-number-border-active); }

.react-flow__node:has(.ptb-node--bool):hover    .ptb-handle--io { color: var(--ptb-node-bool-border-hover); }
.react-flow__node.selected:has(.ptb-node--bool)    .ptb-handle--io { color: var(--ptb-node-bool-border-active); }

.react-flow__node:has(.ptb-node--string):hover  .ptb-handle--io { color: var(--ptb-node-string-border-hover); }
.react-flow__node.selected:has(.ptb-node--string)  .ptb-handle--io { color: var(--ptb-node-string-border-active); }

.react-flow__node:has(.ptb-node--object):hover  .ptb-handle--io { color: var(--ptb-node-object-border-hover); }
.react-flow__node.selected:has(.ptb-node--object)  .ptb-handle--io { color: var(--ptb-node-object-border-active); }

.react-flow__node:has(.ptb-node--id):hover .ptb-handle--io { color: var(--ptb-node-id-border-hover); }
.react-flow__node.selected:has(.ptb-node--id) .ptb-handle--io { color: var(--ptb-node-id-border-active); }

.react-flow__node:has(.ptb-node--unknown):hover .ptb-handle--io { color: var(--ptb-node-unknown-border-hover); }
.react-flow__node.selected:has(.ptb-node--unknown) .ptb-handle--io { color: var(--ptb-node-unknown-border-active); }

/* Option */
.react-flow__node:has(.ptb-node--option):hover .ptb-handle--io { color: var(--ptb-node-option-border-hover); }
.react-flow__node.selected:has(.ptb-node--option) .ptb-handle--io { color: var(--ptb-node-option-border-active); }

/* Subtle hover affordance on the handle icon itself */
.react-flow__handle:hover,
.ptb-handle:hover { filter: brightness(1.05); }

/* === Context-menu variable markers (match IO colors) === */
.ptb-marker {
  display: inline-block;
  width: 10px;
  height: 10px;
  background: currentColor;   /* fill from currentColor */
  border-radius: 9999px;      /* scalar = round */
  vertical-align: middle;
  color: var(--ptb-io-unknown-stroke); /* safe default */
}

/* vector = diamond */
.ptb-marker.ptb-marker--vector {
  border-radius: 2px !important;
  transform: rotate(45deg);
  transform-origin: center center;
}

/* category â†’ color (use same vars as edges/handles) */
.ptb-marker--address { color: var(--ptb-io-address-stroke); }
.ptb-marker--number  { color: var(--ptb-io-number-stroke);  }
.ptb-marker--bool    { color: var(--ptb-io-bool-stroke);    }
.ptb-marker--string  { color: var(--ptb-io-string-stroke);  }
.ptb-marker--object  { color: var(--ptb-io-object-stroke);  }
.ptb-marker--id      { color: var(--ptb-io-id-stroke);      }
/* option marker */
.ptb-marker--option  { color: var(--ptb-node-option-border); }

/* ============================================================
   OPTION NODE EXTRAS (UI bits used by VarNode when kind=Option)
   ============================================================ */

/* Small title text helper (optional) */
.ptb-title {
  color: inherit;
  font-size: 11px;
  line-height: 1;
  letter-spacing: .2px;
}

/* Option editor area separator */
.ptb-option-editor {
  margin-top: 6px;
  padding-top: 6px;
  border-top: 1px dashed rgba(0,0,0,0.12);
}
.dark .ptb-option-editor { border-top-color: rgba(255,255,255,0.12); }

/* Some/None compact toggle */
.ptb-option-toggle {
  font-size: 10px;
  line-height: 1;
  padding: 3px 8px;
  border-radius: 8px;
  border: 1px solid #d1d5db; /* gray-300 */
  background: #ffffff;
  color: #111827;
  transition: background 120ms ease, border-color 120ms ease, box-shadow 120ms ease;
}
.ptb-option-toggle:hover { background: #f9fafb; } /* gray-50 */
.dark .ptb-option-toggle {
  border-color: #4b5563; /* gray-600 */
  background: #0b0e12;
  color: #e5e7eb;
}
.dark .ptb-option-toggle:hover { background: #111827; }

.ptb-option-toggle.is-some {
  border-color: var(--ptb-node-option-border);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--ptb-node-option-border) 25%, transparent);
}
.ptb-option-toggle.is-none { opacity: .9; }

/* Chip-style label for Option */
.ptb-option-chip {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  font-size: 10px;
  padding: 2px 6px;
  border-radius: 9999px;
  background: rgba(167,139,250,0.18); /* violet-400 faint */
  border: 1px solid var(--ptb-node-option-border);
  color: inherit;
}

/* Vector list inside option/vector */
.ptb-vec-list {
  display: grid;
  gap: 6px;
}
.ptb-vec-list .ptb-text-input,
.ptb-vec-list .ptb-select-bool {
  width: 100%;
}

/* Mini stepper near header */
.ptb-mini-stepper { margin-left: 6px; }

/* Inputs inside node */
.ptb-text-input {
  display: block;
  width: 100%;
  font-size: 12px;
  padding: 6px 8px;
  border: 1px solid #d1d5db;
  border-radius: 8px;
  background: #ffffff;
  color: #111827;
  outline: none;
  transition: border-color 120ms ease, box-shadow 120ms ease;
}
.ptb-text-input:focus {
  border-color: var(--ptb-node-option-border);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--ptb-node-option-border) 22%, transparent);
}
.dark .ptb-text-input {
  border-color: #4b5563;
  background: #0b0e12;
  color: #e5e7eb;
}
.dark .ptb-text-input:focus {
  border-color: var(--ptb-node-option-border);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--ptb-node-option-border) 28%, transparent);
}


/* ============================================================
   CodePip styles
   ============================================================ */

.ptb-codepip {
  pointer-events: auto;
  user-select: text;
  box-shadow: 0 4px 18px rgba(0,0,0,0.25);
  border-radius: 10px;
  overflow: hidden;
  background: transparent;
}

.ptb-codepip .ptb-codepip__body pre[class*="language-"],
.ptb-codepip .ptb-codepip__body code[class*="language-"] {
  font-size: 12px;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
               "Liberation Mono", "Courier New", monospace;
  line-height: 1.45;
}

.ptb-codepip__header {
  background: var(--ptb-codepip-header-bg);
  color: var(--ptb-codepip-header-fg);
  border-bottom: 1px solid var(--ptb-codepip-border);
}

.ptb-codepip__body {
  background: var(--ptb-codepip-body-bg);
}

.ptb-codepip__footer {
  background: var(--ptb-codepip-header-bg);
  color: var(--ptb-codepip-header-fg);
  border-top: 1px solid var(--ptb-codepip-border);
}

/* Theme dropdown */
.ptb-codepip__theme {
  background: transparent;
  color: inherit;
  border: 1px solid color-mix(in srgb, var(--ptb-codepip-header-fg) 20%, transparent);
}


/* ===== Resizable LEFT handle ===== */

.ptb-resize-handle {
  position: absolute;
  top: 0;
  left: 0;
  width: 8px;
  height: 100%;
  cursor: ew-resize;
  background: var(--ptb-code-resizer-bg);
  transition: background 120ms ease;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 5;
}

.ptb-resize-handle::after {
  content: '';
  width: 2px;
  height: 18px;
  border-radius: 2px;
  background: var(--ptb-code-resizer-grip);
  box-shadow:
    -3px 0 0 0 var(--ptb-code-resizer-grip),
     3px 0 0 0 var(--ptb-code-resizer-grip);
  opacity: .9;
}

.ptb-resize-handle:hover {
  background: var(--ptb-code-resizer-hover-bg);
}

.ptb-codepip .resizable-handle-left {
  width: 8px;
  cursor: ew-resize;
  z-index: 5;
}
.ptb-codepip .resizable-handle-left:hover {
  background: var(--ptb-code-resizer-hover-bg);
}

/* Buttons */
.ptb-codepip__btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 6px;
  padding: 0.2rem 0.4rem;
  transition: filter .12s ease, opacity .12s ease, transform .04s ease-in-out;
}

.ptb-codepip__btn:active {
  transform: translateY(0.5px);
}

/* Neutral buttons: copy / assets */
.ptb-codepip__btn--copy,
.ptb-codepip__btn--assets {
  background: var(--ptb-code-btn-neutral-bg);
  color: var(--ptb-code-btn-neutral-fg);
  transition: background 120ms ease, transform 40ms ease-in-out;
}
.ptb-codepip__btn--copy:hover,
.ptb-codepip__btn--assets:hover {
  background: var(--ptb-code-btn-neutral-hover);
}
.ptb-codepip__btn--copy:active,
.ptb-codepip__btn--assets:active {
  background: var(--ptb-code-btn-neutral-active);
  transform: translateY(0.5px);
}

/* Run button - RED */
.ptb-codepip__btn--run {
  background: var(--ptb-code-btn-run);
  color: #fff;
  transition: background 120ms ease, transform 40ms ease-in-out;
}
.ptb-codepip__btn--run:hover {
  background: var(--ptb-code-btn-run-hover);
}
.ptb-codepip__btn--run:active {
  background: var(--ptb-code-btn-run-active);
  transform: translateY(0.5px);
}
.ptb-codepip__btn--run[disabled],
.ptb-codepip__btn--run[aria-busy="true"] {
  background: var(--ptb-code-btn-run-disabled);
  opacity: .7;
  cursor: not-allowed;
  transform: none;
}

/* Focus ring for accessibility */
.ptb-codepip__btn:focus-visible {
  outline: 2px solid color-mix(in srgb, currentColor 60%, transparent);
  outline-offset: 2px;
}

/* ============================================================
   AssetsModal styles
   ============================================================ */

.ptb-modal {
  position: fixed;
  inset: 0;
  z-index: 50;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--ptb-modal-overlay);
}

.ptb-modal__panel {
  border-radius: 10px;
  box-shadow: 0 4px 18px rgba(0,0,0,0.25);
  width: 820px;
  max-width: 94vw;
  max-height: 82vh;
  overflow: hidden;
  border: 1px solid var(--ptb-modal-panel-border);
  background: var(--ptb-modal-panel-bg);
  color: var(--ptb-modal-panel-fg);
}

/* Header */
.ptb-modal__header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 6px 12px;
  background: var(--ptb-modal-header-bg);
  border-bottom: 1px solid var(--ptb-modal-panel-border);
}
.ptb-modal__title {
  font-weight: 600;
}
.ptb-modal__subtitle {
  font-size: 12px;
  opacity: .7;
}

/* Body */
.ptb-modal__body {
  padding: 12px;
}
.ptb-modal__list {
  border: 1px solid var(--ptb-modal-panel-border);
  border-radius: 6px;
  height: 58vh;
  overflow: auto;
}
.ptb-modal__list-empty,
.ptb-modal__list-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  opacity: .7;
  font-size: 14px;
}
.ptb-modal__item {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 6px 12px;
  cursor: pointer;
  transition: background 120ms ease;
}
.ptb-modal__item:hover {
  background: rgba(0,0,0,0.06);
}
.dark .ptb-modal__item:hover {
  background: rgba(255,255,255,0.06);
}
.ptb-modal__item-id {
  font-size: 12px;
  font-weight: 500;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.ptb-modal__item-type {
  font-size: 11px;
  opacity: .75;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Footer (pagination) */
.ptb-modal__footer {
  margin-top: 12px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.ptb-modal__btn {
  padding: 4px 8px;
  border-radius: 6px;
  font-size: 13px;
  transition: background 120ms ease, opacity 120ms ease, transform 40ms ease-in-out;
  background: var(--ptb-modal-btn-neutral-bg);
  color: var(--ptb-modal-btn-neutral-fg);
}
.ptb-modal__btn:hover  { background: var(--ptb-modal-btn-neutral-hover); }
.ptb-modal__btn:active { background: var(--ptb-modal-btn-neutral-active); transform: translateY(0.5px); }
.ptb-modal__btn:disabled { opacity: .5; cursor: not-allowed; transform: none; }

/* Subtle appear animation */
.ptb-node-shell {
  animation: ptb-fade-in 140ms ease-out;
}
@keyframes ptb-fade-in {
  from { opacity: 0; transform: translateY(2px); }
  to   { opacity: 1; transform: translateY(0); }
}